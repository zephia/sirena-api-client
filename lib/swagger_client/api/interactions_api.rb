=begin
#Sirena API

#Sirena API for lead providers and prospect data manipulation

OpenAPI spec version: 1.5.0
Contact: it@getsirena.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require "uri"

module SwaggerClient
  class InteractionsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # 
    # Returns a filterable list of interactions
    # @param [Hash] opts the optional parameters
    # @option opts [String] :format An optional flag to force a response format. Note that the API also supports content negotiation and honors the Accept header.
    # @option opts [String] :agent The id of the agent to filter
    # @option opts [String] :status The status to filter
    # @option opts [DateTime] :created_after The start date to filter interactions by their creation date
    # @option opts [DateTime] :start @deprecated - use createdAfter The start date to filter interactions by their creation date (alias of createdAfter) 
    # @option opts [DateTime] :created_before The end date to filter interactions by their creation date
    # @option opts [DateTime] :_end @deprecated - use createdBefore The end date to filter interactions by their creation date (alias of createdBefore) 
    # @return [Interactions]
    def get_interactions(opts = {})
      data, _status_code, _headers = get_interactions_with_http_info(opts)
      return data
    end

    # 
    # Returns a filterable list of interactions
    # @param [Hash] opts the optional parameters
    # @option opts [String] :format An optional flag to force a response format. Note that the API also supports content negotiation and honors the Accept header.
    # @option opts [String] :agent The id of the agent to filter
    # @option opts [String] :status The status to filter
    # @option opts [DateTime] :created_after The start date to filter interactions by their creation date
    # @option opts [DateTime] :start @deprecated - use createdAfter The start date to filter interactions by their creation date (alias of createdAfter) 
    # @option opts [DateTime] :created_before The end date to filter interactions by their creation date
    # @option opts [DateTime] :_end @deprecated - use createdBefore The end date to filter interactions by their creation date (alias of createdBefore) 
    # @return [Array<(Interactions, Fixnum, Hash)>] Interactions data, response status code and response headers
    def get_interactions_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: InteractionsApi.get_interactions ..."
      end
      if @api_client.config.client_side_validation && opts[:'format'] && !['csv', 'json'].include?(opts[:'format'])
        fail ArgumentError, 'invalid value for "format", must be one of csv, json'
      end
      # resource path
      local_var_path = "/prospects/interactions"

      # query parameters
      query_params = {}
      query_params[:'format'] = opts[:'format'] if !opts[:'format'].nil?
      query_params[:'agent'] = opts[:'agent'] if !opts[:'agent'].nil?
      query_params[:'status'] = opts[:'status'] if !opts[:'status'].nil?
      query_params[:'createdAfter'] = opts[:'created_after'] if !opts[:'created_after'].nil?
      query_params[:'start'] = opts[:'start'] if !opts[:'start'].nil?
      query_params[:'createdBefore'] = opts[:'created_before'] if !opts[:'created_before'].nil?
      query_params[:'end'] = opts[:'_end'] if !opts[:'_end'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/csv', 'text/plain'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['ApiKey', 'OAuth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Interactions')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InteractionsApi#get_interactions\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
